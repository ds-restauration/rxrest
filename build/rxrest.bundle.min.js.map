{"version":3,"file":"rxrest.bundle.min.js","sources":["../src/RxRestProxyHandler.ts","../node_modules/rxjs/util/root.js","../node_modules/rxjs/util/isFunction.js","../node_modules/rxjs/util/isArray.js","../node_modules/rxjs/util/isObject.js","../node_modules/rxjs/util/tryCatch.js","../node_modules/rxjs/util/errorObject.js","../node_modules/rxjs/util/UnsubscriptionError.js","../node_modules/rxjs/Subscription.js","../node_modules/rxjs/Observer.js","../node_modules/rxjs/symbol/rxSubscriber.js","../node_modules/rxjs/Subscriber.js","../node_modules/rxjs/util/toSubscriber.js","../node_modules/rxjs/symbol/observable.js","../node_modules/rxjs/util/noop.js","../node_modules/rxjs/util/pipe.js","../node_modules/rxjs/Observable.js","../node_modules/rxjs/observable/PromiseObservable.js","../node_modules/rxjs/observable/fromPromise.js","../node_modules/rxjs/add/observable/fromPromise.js","../node_modules/rxjs/util/isArrayLike.js","../node_modules/rxjs/util/isPromise.js","../node_modules/rxjs/symbol/iterator.js","../node_modules/rxjs/InnerSubscriber.js","../node_modules/rxjs/util/subscribeToResult.js","../node_modules/rxjs/OuterSubscriber.js","../node_modules/rxjs/operators/mergeMap.js","../node_modules/rxjs/operator/mergeMap.js","../node_modules/rxjs/add/operator/mergeMap.js","../node_modules/rxjs/observable/ErrorObservable.js","../node_modules/rxjs/observable/throw.js","../node_modules/rxjs/operators/concatMap.js","../node_modules/rxjs/add/observable/throw.js","../node_modules/rxjs/operator/concatMap.js","../node_modules/rxjs/add/operator/concatMap.js","../node_modules/rxjs/operators/catchError.js","../node_modules/rxjs/operator/catch.js","../node_modules/rxjs/add/operator/catch.js","../node_modules/rxjs/observable/ScalarObservable.js","../node_modules/rxjs/observable/EmptyObservable.js","../node_modules/rxjs/util/isScheduler.js","../node_modules/rxjs/observable/ArrayObservable.js","../node_modules/rxjs/observable/of.js","../src/utils.ts","../node_modules/rxjs/add/observable/of.js","../node_modules/component-emitter/index.js","../node_modules/superagent/lib/is-object.js","../node_modules/superagent/lib/request-base.js","../node_modules/superagent/lib/utils.js","../node_modules/superagent/lib/response-base.js","../node_modules/superagent/lib/agent-base.js","../node_modules/superagent/lib/client.js","../src/fetch.ts","../src/RxRestConfiguration.ts","../node_modules/rxjs/operators/audit.js","../node_modules/rxjs/scheduler/Action.js","../node_modules/rxjs/scheduler/AsyncAction.js","../node_modules/rxjs/Scheduler.js","../node_modules/rxjs/scheduler/AsyncScheduler.js","../node_modules/rxjs/scheduler/async.js","../node_modules/rxjs/util/isNumeric.js","../node_modules/rxjs/util/isDate.js","../node_modules/rxjs/observable/TimerObservable.js","../node_modules/rxjs/operators/buffer.js","../node_modules/rxjs/operators/bufferCount.js","../node_modules/rxjs/operators/bufferTime.js","../node_modules/rxjs/operators/bufferToggle.js","../node_modules/rxjs/operators/bufferWhen.js","../node_modules/rxjs/operators/combineLatest.js","../node_modules/rxjs/observable/IteratorObservable.js","../node_modules/rxjs/observable/ArrayLikeObservable.js","../node_modules/rxjs/Notification.js","../node_modules/rxjs/operators/observeOn.js","../node_modules/rxjs/observable/FromObservable.js","../node_modules/rxjs/operators/count.js","../node_modules/rxjs/operators/debounce.js","../node_modules/rxjs/operators/debounceTime.js","../node_modules/rxjs/operators/defaultIfEmpty.js","../node_modules/rxjs/operators/delay.js","../node_modules/rxjs/operators/delayWhen.js","../node_modules/rxjs/operators/dematerialize.js","../node_modules/rxjs/util/Set.js","../node_modules/rxjs/operators/distinct.js","../node_modules/rxjs/operators/distinctUntilChanged.js","../node_modules/rxjs/util/ArgumentOutOfRangeError.js","../node_modules/rxjs/operators/elementAt.js","../node_modules/rxjs/operators/every.js","../node_modules/rxjs/operators/exhaust.js","../node_modules/rxjs/operators/exhaustMap.js","../node_modules/rxjs/operators/expand.js","../node_modules/rxjs/operators/filter.js","../node_modules/rxjs/operators/finalize.js","../node_modules/rxjs/operators/find.js","../node_modules/rxjs/util/EmptyError.js","../node_modules/rxjs/operators/first.js","../node_modules/rxjs/util/ObjectUnsubscribedError.js","../node_modules/rxjs/SubjectSubscription.js","../node_modules/rxjs/Subject.js","../node_modules/rxjs/util/MapPolyfill.js","../node_modules/rxjs/util/Map.js","../node_modules/rxjs/util/FastMap.js","../node_modules/rxjs/operators/groupBy.js","../node_modules/rxjs/operators/ignoreElements.js","../node_modules/rxjs/operators/isEmpty.js","../node_modules/rxjs/operators/last.js","../node_modules/rxjs/operators/map.js","../node_modules/rxjs/operators/mapTo.js","../node_modules/rxjs/operators/materialize.js","../node_modules/rxjs/operators/scan.js","../node_modules/rxjs/operators/takeLast.js","../node_modules/rxjs/operators/mergeMapTo.js","../node_modules/rxjs/operators/mergeScan.js","../node_modules/rxjs/operators/refCount.js","../node_modules/rxjs/observable/ConnectableObservable.js","../node_modules/rxjs/operators/onErrorResumeNext.js","../node_modules/rxjs/operators/pairwise.js","../node_modules/rxjs/BehaviorSubject.js","../node_modules/rxjs/AsyncSubject.js","../node_modules/rxjs/scheduler/QueueAction.js","../node_modules/rxjs/scheduler/QueueScheduler.js","../node_modules/rxjs/scheduler/queue.js","../node_modules/rxjs/ReplaySubject.js","../node_modules/rxjs/observable/race.js","../node_modules/rxjs/operators/repeat.js","../node_modules/rxjs/operators/repeatWhen.js","../node_modules/rxjs/operators/retry.js","../node_modules/rxjs/operators/retryWhen.js","../node_modules/rxjs/operators/sample.js","../node_modules/rxjs/operators/sampleTime.js","../node_modules/rxjs/operators/sequenceEqual.js","../node_modules/rxjs/operators/single.js","../node_modules/rxjs/operators/skip.js","../node_modules/rxjs/operators/skipLast.js","../node_modules/rxjs/operators/skipUntil.js","../node_modules/rxjs/operators/skipWhile.js","../node_modules/rxjs/operators/switchMap.js","../node_modules/rxjs/operators/switchMapTo.js","../node_modules/rxjs/operators/take.js","../node_modules/rxjs/operators/takeUntil.js","../node_modules/rxjs/operators/takeWhile.js","../node_modules/rxjs/operators/tap.js","../node_modules/rxjs/operators/throttle.js","../node_modules/rxjs/operators/throttleTime.js","../node_modules/rxjs/operators/timeInterval.js","../node_modules/rxjs/util/TimeoutError.js","../node_modules/rxjs/operators/timeout.js","../node_modules/rxjs/operators/timeoutWith.js","../node_modules/rxjs/operators/window.js","../node_modules/rxjs/operators/windowCount.js","../node_modules/rxjs/operators/windowTime.js","../node_modules/rxjs/operators/windowToggle.js","../node_modules/rxjs/operators/windowWhen.js","../node_modules/rxjs/operators/withLatestFrom.js","../node_modules/rxjs/operators/zip.js","../node_modules/rxjs/operators.js","../src/RxRest.ts","../src/index.ts"],"sourcesContent":["import {RxRest} from './RxRest'\n\nexport class RxRestProxyHandler<F, T> implements ProxyHandler<RxRest<F, T>> {\n  private $internal: PropertyKey[] = [];\n  private $instance: F;\n\n  constructor(target: F) {\n    this.$instance = target\n    do {\n      this.$internal = this.$internal.concat(\n        Object.getOwnPropertyNames(target), Object.getOwnPropertySymbols(target)\n      )\n    } while (target = Object.getPrototypeOf(target))\n  }\n\n  getPrototypeOf(target: any) {\n    return Object.getPrototypeOf(this.$instance)\n  }\n\n  defineProperty(target: any, p: PropertyKey, attributes: PropertyDescriptor): boolean {\n    if (~this.$internal.indexOf(p)) {\n      return true\n    }\n\n    Object.defineProperty(target, p, attributes)\n    return true\n  }\n\n  deleteProperty(target: any, p: PropertyKey): boolean {\n    return delete target[p]\n  }\n\n  set(target: any, p: PropertyKey, value: any, receiver: any): boolean {\n\n    if (~this.$internal.indexOf(p)) {\n      this.$instance[p] = value\n      return true\n    }\n\n    if ((this.$instance as any).$pristine === true && target[p] !== value) {\n      (this.$instance as any).$pristine = false\n    }\n\n    target[p] = value\n    return true\n  }\n\n  get(target: any, p: PropertyKey, receiver: any): any {\n    if (~this.$internal.indexOf(p)) {\n      return this.$instance[p]\n    }\n\n    return target[p]\n  }\n}\n","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map","\"use strict\";\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nvar noop_1 = require('./noop');\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\nvar pipe_1 = require('./util/pipe');\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map","\"use strict\";\nvar PromiseObservable_1 = require('./PromiseObservable');\nexports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromPromise_1 = require('../../observable/fromPromise');\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map","\"use strict\";\nexports.isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map","\"use strict\";\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root_1.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n//# sourceMappingURL=iterator.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map","\"use strict\";\nvar root_1 = require('./root');\nvar isArrayLike_1 = require('./isArrayLike');\nvar isPromise_1 = require('./isPromise');\nvar isObject_1 = require('./isObject');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\nvar InnerSubscriber_1 = require('../InnerSubscriber');\nvar observable_1 = require('../symbol/observable');\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike_1.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator_1.iterator] === 'function') {\n        var iterator = result[iterator_1.iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable_1.observable] === 'function') {\n        var obs = result[observable_1.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nvar mergeMap_1 = require('../operators/mergeMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(project, resultSelector, concurrent)(this);\n}\nexports.mergeMap = mergeMap;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    __extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        _super.call(this);\n        this.error = error;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        subscriber.syncErrorThrowable = true;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nexports.ErrorObservable = ErrorObservable;\n//# sourceMappingURL=ErrorObservable.js.map","\"use strict\";\nvar ErrorObservable_1 = require('./ErrorObservable');\nexports._throw = ErrorObservable_1.ErrorObservable.create;\n//# sourceMappingURL=throw.js.map","\"use strict\";\nvar mergeMap_1 = require('./mergeMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n    return mergeMap_1.mergeMap(project, resultSelector, 1);\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throw_1 = require('../../observable/throw');\nObservable_1.Observable.throw = throw_1._throw;\n//# sourceMappingURL=throw.js.map","\"use strict\";\nvar concatMap_1 = require('../operators/concatMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n    return concatMap_1.concatMap(project, resultSelector)(this);\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concatMap_1 = require('../../operator/concatMap');\nObservable_1.Observable.prototype.concatMap = concatMap_1.concatMap;\n//# sourceMappingURL=concatMap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nfunction catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nexports.catchError = catchError;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=catchError.js.map","\"use strict\";\nvar catchError_1 = require('../operators/catchError');\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    return catchError_1.catchError(selector)(this);\n}\nexports._catch = _catch;\n//# sourceMappingURL=catch.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar catch_1 = require('../../operator/catch');\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map","\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map","\"use strict\";\nvar ArrayObservable_1 = require('./ArrayObservable');\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map","export function objectToMap(map: URLSearchParams | Headers, item: any): any {\n  for (let key in item) {\n    if (Array.isArray(item[key])) {\n      for (let i = 0; i < item[key].length; i++) {\n        map.append(key, item[key][i])\n      }\n    } else {\n      map.append(key, item[key])\n    }\n  }\n\n  return map\n}\n\n/**\n * UUID generator https://gist.github.com/jed/982883\n */\nexport function uuid(a: any = '', b: any = '') {\n  for (; a++ < 36; b += a * 51 & 52 ? (\n    a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4\n  ).toString(16) : '-') {\n    //\n  }\n  return b\n}\n","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","'use strict';\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n","'use strict';\n\n/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  for(var option in options) {\n    switch(option) {\n      case 'deadline':\n        this._timeout = options.deadline;\n        break;\n      case 'response':\n        this._responseTimeout = options.response;\n        break;\n      default:\n        console.warn(\"Unknown timeout option\", option);\n    }\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count, fn){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\nvar ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nRequestBase.prototype._shouldRetry = function(err, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n  if (this._retryCallback) {\n    try {\n      var override = this._retryCallback(err, res);\n      if (override === true) return true;\n      if (override === false) return false;\n      // undefined falls back to defaults\n    } catch(e) {\n      console.error(e);\n    }\n  }\n  if (res && res.status && res.status >= 500 && res.status != 501) return true;\n  if (err) {\n    if (err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n    // Superagent timeout\n    if (err.timeout && err.code == 'ECONNABORTED') return true;\n    if (err.crossDomain) return true;\n  }\n  return false;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject) {\n      self.end(function(err, res) {\n        if (err) innerReject(err);\n        else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n  // name should be either a string or an object.\n  if (null === name || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function(user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + base64Encoder(user + ':' + pass));\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', 'Bearer ' + user);\n      break;\n  }\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on == undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function(n){\n  if ('number' !== typeof n) {\n    throw TypeError(\"Invalid argument\");\n  }\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function() {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header,\n  };\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if ('function' === typeof this._sort) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = function() {console.trace(\"Unsupported\");}\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n};\n","'use strict';\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, changesOrigin){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  // secuirty\n  if (changesOrigin) {\n    delete header['authorization'];\n    delete header['cookie'];\n  }\n  return header;\n};\n","'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field) {\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n","function Agent() {\n  this._defaults = [];\n}\n\n[\"use\", \"on\", \"once\", \"set\", \"query\", \"type\", \"accept\", \"auth\", \"withCredentials\", \"sortQuery\", \"retry\", \"ok\", \"redirects\",\n \"timeout\", \"buffer\", \"serialize\", \"parse\", \"ca\", \"key\", \"pfx\", \"cert\"].forEach(function(fn) {\n  /** Default setting for all requests from this agent */\n  Agent.prototype[fn] = function(/*varargs*/) {\n    this._defaults.push({fn:fn, arguments:arguments});\n    return this;\n  }\n});\n\nAgent.prototype._setDefaults = function(req) {\n    this._defaults.forEach(function(def) {\n      req[def.fn].apply(req, def.arguments);\n    });\n};\n\nmodule.exports = Agent;\n","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('component-emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar ResponseBase = require('./response-base');\nvar Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only version of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': serialize,\n  'application/json': JSON.stringify,\n};\n\n/**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse,\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) { // could be empty line, just skip it\n      continue;\n    }\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[\\/+]json($|[^-\\w])/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str) {\n  var parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n      }\n    } catch(custom_err) {\n      new_err = custom_err; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (1 === arguments.length) pass = '';\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    };\n  }\n\n  var encoder = function(string) {\n    if ('function' === typeof btoa) {\n      return btoa(string);\n    }\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = (this.xhr = request.getXHR());\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\nrequest.agent = function() {\n  return new Agent();\n};\n\n[\"GET\", \"POST\", \"OPTIONS\", \"PATCH\", \"PUT\", \"DELETE\"].forEach(function(method) {\n  Agent.prototype[method.toLowerCase()] = function(url, fn) {\n    var req = new request.Request(method, url);\n    this._setDefaults(req);\n    if (fn) {\n      req.end(fn);\n    }\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype['delete'];\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn) {\n  var req = request('GET', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn) {\n  var req = request('HEAD', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn) {\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  var req = request('DELETE', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn) {\n  var req = request('PATCH', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn) {\n  var req = request('POST', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn) {\n  var req = request('PUT', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n","import './rxjs'\nimport {ErrorResponse} from './interfaces'\nimport * as superagent from 'superagent'\nimport {Observable} from 'rxjs/Observable'\nimport {Observer} from 'rxjs/Observer'\n\nexport function fetch(\n  input: string|Request,\n  init?: RequestInit,\n  abortCallback?: (req: Request) => void\n): Observable<any> {\n\n  if (!(input instanceof Request)) {\n    input = new Request(input, init)\n  }\n\n  let req = superagent[input.method.toLowerCase()](input.url)\n\n  for (let header of input.headers) {\n    req.set(header[0], header[1])\n  }\n\n  return Observable.fromPromise(input.text())\n  .mergeMap(body => {\n    req.send(body)\n\n    return Observable.create((observer: Observer<any>) => {\n      req.end(function(err: any, res: any) {\n        if (err) {\n          return observer.error(res)\n        }\n\n        if (res.noContent === true) {\n          observer.next(new Response())\n          return observer.complete()\n        }\n\n        res.url = (input as Request).url\n        let response = new Response(res.text, res)\n\n        observer.next(response)\n        observer.complete()\n      })\n\n      return function abort() {\n        req.abort()\n        if (abortCallback) {\n          abortCallback(req)\n        }\n      }\n    })\n  })\n}\n","import {\n  RequestInterceptor,\n  ResponseInterceptor,\n  ErrorInterceptor\n} from './interfaces'\nimport { RxRestItem } from './index'\nimport { BodyParam } from './interfaces'\nimport { objectToMap } from './utils'\nimport { fetch } from './fetch';\n\nexport interface RequestBodyHandler<T> {\n  (body: BodyParam<T>): FormData|URLSearchParams|Body|Blob|undefined|string|Promise<any>\n}\n\nexport interface ResponseBodyHandler {\n  (body: Response): Promise<any>\n}\n\n/**\n * RxRestConfiguration\n */\nexport class RxRestConfiguration {\n  private $baseURL: string\n  private $headers: Headers = new Headers()\n  private $queryParams: URLSearchParams = new URLSearchParams()\n  public identifier: string = 'id'\n  public requestInterceptors: RequestInterceptor[] = []\n  public responseInterceptors: ResponseInterceptor[] = []\n  public errorInterceptors: ErrorInterceptor[] = []\n  public fetch: any\n  public abortCallback: (req: Request) => void = () => null\n  public uuid: boolean = false\n\n  constructor() {\n      this.fetch = fetch\n  }\n\n  /**\n   * requestBodyHandler\n   * JSONify the body if it's an `RxRestItem` or an `Object`\n   *\n   * @param {FormData|URLSearchParams|Body|Blob|undefined} body\n   * @returns {any}\n   */\n  _requestBodyHandler(body: FormData|URLSearchParams|Body|Blob|undefined):\n    FormData|URLSearchParams|Body|Blob|undefined|string|Promise<any> {\n    if (!body) {\n      return undefined\n    }\n\n    if (body instanceof FormData || body instanceof URLSearchParams) {\n      return body\n    }\n\n    return body instanceof RxRestItem ? body.json() : JSON.stringify(body)\n  }\n\n  /**\n   * responseBodyHandler\n   * transforms the response to a json object\n   *\n   * @param {Response} body\n   * @reject when response is an error\n   * @returns {Promise<any>}\n   */\n  _responseBodyHandler(body: Response): Promise<{body: any, metadata: any}> {\n    return body.text()\n    .then(text => {\n      return {body: text ? JSON.parse(text) : null, metadata: null}\n    })\n  }\n\n  get responseBodyHandler(): ResponseBodyHandler {\n    return this._responseBodyHandler\n  }\n\n  set responseBodyHandler(responseBodyHandler: ResponseBodyHandler) {\n    this._responseBodyHandler = responseBodyHandler\n  }\n\n  get requestBodyHandler(): RequestBodyHandler<any> {\n    return this._requestBodyHandler\n  }\n\n  set requestBodyHandler(requestBodyHandler: RequestBodyHandler<any>) {\n    this._requestBodyHandler = requestBodyHandler\n  }\n\n  /**\n   * set baseURL\n   *\n   * @param {String} base\n   * @returns\n   */\n  set baseURL(base: string) {\n    if (base.charAt(base.length - 1) !== '/') {\n      base += '/'\n    }\n\n    this.$baseURL = base\n  }\n\n  /**\n   * get baseURL\n   *\n   * @returns {string}\n   */\n  get baseURL(): string {\n    return this.$baseURL\n  }\n\n  /**\n   * Set global query params\n   * @param {Object|URLSearchParams} params\n   */\n  set queryParams(params: any) {\n    if (params instanceof URLSearchParams) {\n      this.$queryParams = params\n      return\n    }\n\n    if (typeof params === 'string') {\n      this.$queryParams = new URLSearchParams(params)\n      return\n    }\n\n    this.$queryParams = objectToMap(new URLSearchParams(), params)\n  }\n\n  /**\n   * Get global query params\n   * @return {URLSearchParams}\n   */\n  get queryParams(): any {\n    return this.$queryParams\n  }\n\n  /**\n   * set global headers\n   * @param {Object|Headers} params\n   */\n  set headers(params: any) {\n     if (params instanceof Headers) {\n      this.$headers = params\n      return\n    }\n\n    this.$headers = objectToMap(new Headers(), params)\n }\n\n  /**\n   * Get global headers\n   * @return Headers\n   */\n  get headers(): any {\n    return this.$headers\n  }\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nexports.audit = audit;\nvar AuditOperator = (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = (function (_super) {\n    __extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);\n            if (duration === errorObject_1.errorObject) {\n                this.destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, duration);\n                if (innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=audit.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map","\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map","\"use strict\";\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\nvar isScheduler_1 = require('../util/isScheduler');\nvar isDate_1 = require('../util/isDate');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nexports.buffer = buffer;\nvar BufferOperator = (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = (function (_super) {\n    __extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        _super.call(this, destination);\n        this.buffer = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=buffer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nexports.bufferCount = bufferCount;\nvar BufferCountOperator = (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = (function (_super) {\n    __extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.buffer = [];\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSkipCountSubscriber = (function (_super) {\n    __extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [];\n        this.count = 0;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=bufferCount.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar Subscriber_1 = require('../Subscriber');\nvar isScheduler_1 = require('../util/isScheduler');\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async_1.async;\n    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nexports.bufferTime = bufferTime;\nvar BufferTimeOperator = (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = (function (_super) {\n    __extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        _super.call(this, destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n        this.contexts = [];\n        var context = this.openContext();\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context = contexts[i];\n            var buffer = context.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            destination.next(context.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nexports.bufferToggle = bufferToggle;\nvar BufferToggleOperator = (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = (function (_super) {\n    __extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, openings));\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription_1.Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nexports.bufferWhen = bufferWhen;\nvar BufferWhenOperator = (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = (function (_super) {\n    __extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription_1.Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(new ArrayObservable_1.ArrayObservable([source].concat(observables)), new CombineLatestOperator(project)); };\n}\nexports.combineLatest = combineLatest;\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = (function (_super) {\n    __extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_1.Observable));\nexports.IteratorObservable = IteratorObservable;\nvar StringIterator = (function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = str.length; }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_1.iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = (function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = toLength(arr); }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_1.iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[iterator_1.iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_1.iterator]();\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root_1.root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable = (function (_super) {\n    __extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_1.Observable));\nexports.ArrayLikeObservable = ArrayLikeObservable;\n//# sourceMappingURL=ArrayLikeObservable.js.map","\"use strict\";\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.error);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar isArrayLike_1 = require('../util/isArrayLike');\nvar isPromise_1 = require('../util/isPromise');\nvar PromiseObservable_1 = require('./PromiseObservable');\nvar IteratorObservable_1 = require('./IteratorObservable');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar ArrayLikeObservable_1 = require('./ArrayLikeObservable');\nvar iterator_1 = require('../symbol/iterator');\nvar Observable_1 = require('../Observable');\nvar observeOn_1 = require('../operators/observeOn');\nvar observable_1 = require('../symbol/observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike_1.isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return function (source) { return source.lift(new CountOperator(predicate, source)); };\n}\nexports.count = count;\nvar CountOperator = (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = (function (_super) {\n    __extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=count.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };\n}\nexports.debounce = debounce;\nvar DebounceOperator = (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = (function (_super) {\n    __extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n        this.durationSubscription = null;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult_1.subscribeToResult(this, duration);\n        if (!subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=debounce.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };\n}\nexports.debounceTime = debounceTime;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        _super.call(this, destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nexports.defaultIfEmpty = defaultIfEmpty;\nvar DefaultIfEmptyOperator = (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = (function (_super) {\n    __extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        _super.call(this, destination);\n        this.defaultValue = defaultValue;\n        this.isEmpty = true;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteDelay = isDate_1.isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nexports.delay = delay;\nvar DelayOperator = (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = (function (_super) {\n    __extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        _super.call(this, destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification_1.Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber_1.Subscriber));\nvar DelayMessage = (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Observable_1 = require('../Observable');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return new SubscriptionDelayObservable(source, subscriptionDelay)\n                .lift(new DelayWhenOperator(delayDurationSelector));\n        };\n    }\n    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };\n}\nexports.delayWhen = delayWhen;\nvar DelayWhenOperator = (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = (function (_super) {\n    __extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        _super.call(this, destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.values = [];\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = (function (_super) {\n    __extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        _super.call(this);\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable_1.Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = (function (_super) {\n    __extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        _super.call(this);\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=delayWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nexports.dematerialize = dematerialize;\nvar DeMaterializeOperator = (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = (function (_super) {\n    __extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=dematerialize.js.map","\"use strict\";\nvar root_1 = require('./root');\nfunction minimalSetImpl() {\n    // THIS IS NOT a full impl of Set, this is just the minimum\n    // bits of functionality we need for this library.\n    return (function () {\n        function MinimalSet() {\n            this._values = [];\n        }\n        MinimalSet.prototype.add = function (value) {\n            if (!this.has(value)) {\n                this._values.push(value);\n            }\n        };\n        MinimalSet.prototype.has = function (value) {\n            return this._values.indexOf(value) !== -1;\n        };\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\n            get: function () {\n                return this._values.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MinimalSet.prototype.clear = function () {\n            this._values.length = 0;\n        };\n        return MinimalSet;\n    }());\n}\nexports.minimalSetImpl = minimalSetImpl;\nexports.Set = root_1.root.Set || minimalSetImpl();\n//# sourceMappingURL=Set.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar Set_1 = require('../util/Set');\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct(keySelector, flushes) {\n    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };\n}\nexports.distinct = distinct;\nvar DistinctOperator = (function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctSubscriber = (function (_super) {\n    __extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.values = new Set_1.Set();\n        if (flushes) {\n            this.add(subscribeToResult_1.subscribeToResult(this, flushes));\n        }\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.DistinctSubscriber = DistinctSubscriber;\n//# sourceMappingURL=distinct.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = (function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt(index, defaultValue) {\n    return function (source) { return source.lift(new ElementAtOperator(index, defaultValue)); };\n}\nexports.elementAt = elementAt;\nvar ElementAtOperator = (function () {\n    function ElementAtOperator(index, defaultValue) {\n        this.index = index;\n        this.defaultValue = defaultValue;\n        if (index < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    ElementAtOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n    };\n    return ElementAtOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ElementAtSubscriber = (function (_super) {\n    __extends(ElementAtSubscriber, _super);\n    function ElementAtSubscriber(destination, index, defaultValue) {\n        _super.call(this, destination);\n        this.index = index;\n        this.defaultValue = defaultValue;\n    }\n    ElementAtSubscriber.prototype._next = function (x) {\n        if (this.index-- === 0) {\n            this.destination.next(x);\n            this.destination.complete();\n        }\n    };\n    ElementAtSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index >= 0) {\n            if (typeof this.defaultValue !== 'undefined') {\n                destination.next(this.defaultValue);\n            }\n            else {\n                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);\n            }\n        }\n        destination.complete();\n    };\n    return ElementAtSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=elementAt.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nexports.every = every;\nvar EveryOperator = (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = (function (_super) {\n    __extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=every.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nfunction exhaust() {\n    return function (source) { return source.lift(new SwitchFirstOperator()); };\n}\nexports.exhaust = exhaust;\nvar SwitchFirstOperator = (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstSubscriber = (function (_super) {\n    __extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaust.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap(project, resultSelector) {\n    return function (source) { return source.lift(new SwitchFirstMapOperator(project, resultSelector)); };\n}\nexports.exhaustMap = exhaustMap;\nvar SwitchFirstMapOperator = (function () {\n    function SwitchFirstMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchFirstMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstMapSubscriber = (function (_super) {\n    __extends(SwitchFirstMapSubscriber, _super);\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        try {\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n            destination.next(result);\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };\n}\nexports.expand = expand;\nvar ExpandOperator = (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexports.ExpandOperator = ExpandOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExpandSubscriber = (function (_super) {\n    __extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        _super.call(this, destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch_1.tryCatch(this.project)(value, index);\n            if (result === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.ExpandSubscriber = ExpandSubscriber;\n//# sourceMappingURL=expand.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nexports.finalize = finalize;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(callback));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finalize.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };\n}\nexports.find = find;\nvar FindValueOperator = (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexports.FindValueOperator = FindValueOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FindValueSubscriber = (function (_super) {\n    __extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber_1.Subscriber));\nexports.FindValueSubscriber = FindValueSubscriber;\n//# sourceMappingURL=find.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = (function (_super) {\n    __extends(EmptyError, _super);\n    function EmptyError() {\n        var err = _super.call(this, 'no elements in sequence');\n        this.name = err.name = 'EmptyError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return EmptyError;\n}(Error));\nexports.EmptyError = EmptyError;\n//# sourceMappingURL=EmptyError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return function (source) { return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source)); };\n}\nexports.first = first;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    __extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.index = 0;\n        this.hasCompleted = false;\n        this._emitted = false;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=first.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar MapPolyfill = (function () {\n    function MapPolyfill() {\n        this.size = 0;\n        this._values = [];\n        this._keys = [];\n    }\n    MapPolyfill.prototype.get = function (key) {\n        var i = this._keys.indexOf(key);\n        return i === -1 ? undefined : this._values[i];\n    };\n    MapPolyfill.prototype.set = function (key, value) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            this._keys.push(key);\n            this._values.push(value);\n            this.size++;\n        }\n        else {\n            this._values[i] = value;\n        }\n        return this;\n    };\n    MapPolyfill.prototype.delete = function (key) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            return false;\n        }\n        this._values.splice(i, 1);\n        this._keys.splice(i, 1);\n        this.size--;\n        return true;\n    };\n    MapPolyfill.prototype.clear = function () {\n        this._keys.length = 0;\n        this._values.length = 0;\n        this.size = 0;\n    };\n    MapPolyfill.prototype.forEach = function (cb, thisArg) {\n        for (var i = 0; i < this.size; i++) {\n            cb.call(thisArg, this._values[i], this._keys[i]);\n        }\n    };\n    return MapPolyfill;\n}());\nexports.MapPolyfill = MapPolyfill;\n//# sourceMappingURL=MapPolyfill.js.map","\"use strict\";\nvar root_1 = require('./root');\nvar MapPolyfill_1 = require('./MapPolyfill');\nexports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();\n//# sourceMappingURL=Map.js.map","\"use strict\";\nvar FastMap = (function () {\n    function FastMap() {\n        this.values = {};\n    }\n    FastMap.prototype.delete = function (key) {\n        this.values[key] = null;\n        return true;\n    };\n    FastMap.prototype.set = function (key, value) {\n        this.values[key] = value;\n        return this;\n    };\n    FastMap.prototype.get = function (key) {\n        return this.values[key];\n    };\n    FastMap.prototype.forEach = function (cb, thisArg) {\n        var values = this.values;\n        for (var key in values) {\n            if (values.hasOwnProperty(key) && values[key] !== null) {\n                cb.call(thisArg, values[key], key);\n            }\n        }\n    };\n    FastMap.prototype.clear = function () {\n        this.values = {};\n    };\n    return FastMap;\n}());\nexports.FastMap = FastMap;\n//# sourceMappingURL=FastMap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar Observable_1 = require('../Observable');\nvar Subject_1 = require('../Subject');\nvar Map_1 = require('../util/Map');\nvar FastMap_1 = require('../util/FastMap');\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        _super.call(this, group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = (function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        _super.call(this);\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        _super.call(this);\n        this.parent = parent;\n        parent.count++;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n//# sourceMappingURL=groupBy.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar noop_1 = require('../util/noop');\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nexports.ignoreElements = ignoreElements;\nvar IgnoreElementsOperator = (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = (function (_super) {\n    __extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        _super.apply(this, arguments);\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        noop_1.noop();\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ignoreElements.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nfunction isEmpty() {\n    return function (source) { return source.lift(new IsEmptyOperator()); };\n}\nexports.isEmpty = isEmpty;\nvar IsEmptyOperator = (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IsEmptySubscriber = (function (_super) {\n    __extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        _super.call(this, destination);\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=isEmpty.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last(predicate, resultSelector, defaultValue) {\n    return function (source) { return source.lift(new LastOperator(predicate, resultSelector, defaultValue, source)); };\n}\nexports.last = last;\nvar LastOperator = (function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = (function (_super) {\n    __extends(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.hasValue = false;\n        this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            this.lastValue = defaultValue;\n            this.hasValue = true;\n        }\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=last.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return function (source) { return source.lift(new MapToOperator(value)); };\n}\nexports.mapTo = mapTo;\nvar MapToOperator = (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = (function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=mapTo.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nexports.materialize = materialize;\nvar MaterializeOperator = (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = (function (_super) {\n    __extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification_1.Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=materialize.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nexports.scan = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=scan.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nexports.takeLast = takeLast;\nvar TakeLastOperator = (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = (function (_super) {\n    __extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.ring = new Array();\n        this.count = 0;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeLast.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return function (source) { return source.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent)); };\n}\nexports.mergeMapTo = mergeMapTo;\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nvar MergeMapToOperator = (function () {\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapToOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n    };\n    return MergeMapToOperator;\n}());\nexports.MergeMapToOperator = MergeMapToOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapToSubscriber = (function (_super) {\n    __extends(MergeMapToSubscriber, _super);\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapToSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var resultSelector = this.resultSelector;\n            var index = this.index++;\n            var ish = this.ish;\n            var destination = this.destination;\n            this.active++;\n            this._innerSub(ish, destination, resultSelector, value, index);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapToSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapToSubscriber = MergeMapToSubscriber;\n//# sourceMappingURL=mergeMapTo.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\n}\nexports.mergeScan = mergeScan;\nvar MergeScanOperator = (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexports.MergeScanOperator = MergeScanOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeScanSubscriber = (function (_super) {\n    __extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeScanSubscriber = MergeScanSubscriber;\n//# sourceMappingURL=mergeScan.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nexports.refCount = refCount;\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=refCount.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Observable_1 = require('../Observable');\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar refCount_1 = require('../operators/refCount');\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nexports.connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar FromObservable_1 = require('../observable/FromObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nfunction onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n/* tslint:enable:max-line-length */\nfunction onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nexports.onErrorResumeNextStatic = onErrorResumeNextStatic;\nvar OnErrorResumeNextOperator = (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = (function (_super) {\n    __extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult_1.subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nexports.pairwise = pairwise;\nvar PairwiseOperator = (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = (function (_super) {\n    __extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasPrev = false;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=pairwise.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar Subscription_1 = require('./Subscription');\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject = (function (_super) {\n    __extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        _super.apply(this, arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject_1.Subject));\nexports.AsyncSubject = AsyncSubject;\n//# sourceMappingURL=AsyncSubject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar QueueScheduler = (function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map","\"use strict\";\nvar QueueAction_1 = require('./QueueAction');\nvar QueueScheduler_1 = require('./QueueScheduler');\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n//# sourceMappingURL=queue.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar queue_1 = require('./scheduler/queue');\nvar Subscription_1 = require('./Subscription');\nvar observeOn_1 = require('./operators/observeOn');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `race([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray_1.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());\n}\nexports.race = race;\nvar RaceOperator = (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexports.RaceOperator = RaceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = (function (_super) {\n    __extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.RaceSubscriber = RaceSubscriber;\n//# sourceMappingURL=race.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nexports.repeat = repeat;\nvar RepeatOperator = (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = (function (_super) {\n    __extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=repeat.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nexports.repeatWhen = repeatWhen;\nvar RepeatWhenOperator = (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatWhenSubscriber = (function (_super) {\n    __extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            else if (this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.notifications = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this.notifications = notifications;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject_1.Subject();\n        var retries = tryCatch_1.tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject_1.errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\n}\nexports.retry = retry;\nvar RetryOperator = (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = (function (_super) {\n    __extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=retry.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\n}\nexports.retryWhen = retryWhen;\nvar RetryWhenOperator = (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = (function (_super) {\n    __extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\n                if (retries === errorObject_1.errorObject) {\n                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.errors = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this._unsubscribeAndRecycle();\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return function (source) { return source.lift(new SampleOperator(notifier)); };\n}\nexports.sample = sample;\nvar SampleOperator = (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = (function (_super) {\n    __extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        _super.apply(this, arguments);\n        this.hasValue = false;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=sample.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };\n}\nexports.sampleTime = sampleTime;\nvar SampleTimeOperator = (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = (function (_super) {\n    __extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        _super.call(this, destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual(compareTo, comparor) {\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparor)); };\n}\nexports.sequenceEqual = sequenceEqual;\nvar SequenceEqualOperator = (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nexports.SequenceEqualOperator = SequenceEqualOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SequenceEqualSubscriber = (function (_super) {\n    __extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        _super.call(this, destination);\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch_1.tryCatch(comparor)(a, b);\n                if (areEqual === errorObject_1.errorObject) {\n                    this.destination.error(errorObject_1.errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SequenceEqualSubscriber = SequenceEqualSubscriber;\nvar SequenceEqualCompareToSubscriber = (function (_super) {\n    __extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        _super.call(this, destination);\n        this.parent = parent;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return function (source) { return source.lift(new SingleOperator(predicate, source)); };\n}\nexports.single = single;\nvar SingleOperator = (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = (function (_super) {\n    __extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=single.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(count) {\n    return function (source) { return source.lift(new SkipOperator(count)); };\n}\nexports.skip = skip;\nvar SkipOperator = (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = (function (_super) {\n    __extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skip.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nfunction skipLast(count) {\n    return function (source) { return source.lift(new SkipLastOperator(count)); };\n}\nexports.skipLast = skipLast;\nvar SkipLastOperator = (function () {\n    function SkipLastOperator(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    SkipLastOperator.prototype.call = function (subscriber, source) {\n        if (this._skipCount === 0) {\n            // If we don't want to skip any values then just subscribe\n            // to Subscriber without any further logic.\n            return source.subscribe(new Subscriber_1.Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    };\n    return SkipLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipLastSubscriber = (function (_super) {\n    __extends(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        _super.call(this, destination);\n        this._skipCount = _skipCount;\n        this._count = 0;\n        this._ring = new Array(_skipCount);\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipLast.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };\n}\nexports.skipUntil = skipUntil;\nvar SkipUntilOperator = (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = (function (_super) {\n    __extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.isInnerStopped = false;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype._complete = function () {\n        if (this.isInnerStopped) {\n            _super.prototype._complete.call(this);\n        }\n        else {\n            this.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        this.isInnerStopped = true;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };\n}\nexports.skipWhile = skipWhile;\nvar SkipWhileOperator = (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = (function (_super) {\n    __extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipWhile.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return function switchMapOperatorFunction(source) {\n        return source.lift(new SwitchMapOperator(project, resultSelector));\n    };\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable, resultSelector) {\n    return function (source) { return source.lift(new SwitchMapToOperator(innerObservable, resultSelector)); };\n}\nexports.switchMapTo = switchMapTo;\nvar SwitchMapToOperator = (function () {\n    function SwitchMapToOperator(observable, resultSelector) {\n        this.observable = observable;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n    };\n    return SwitchMapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapToSubscriber = (function (_super) {\n    __extends(SwitchMapToSubscriber, _super);\n    function SwitchMapToSubscriber(destination, inner, resultSelector) {\n        _super.call(this, destination);\n        this.inner = inner;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapToSubscriber.prototype._next = function (value) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));\n    };\n    SwitchMapToSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    return SwitchMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMapTo.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nexports.take = take;\nvar TakeOperator = (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = (function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=take.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nexports.takeUntil = takeUntil;\nvar TakeUntilOperator = (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = (function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };\n}\nexports.takeWhile = takeWhile;\nvar TakeWhileOperator = (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = (function (_super) {\n    __extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.index = 0;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeWhile.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nfunction tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nexports.tap = tap;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=tap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nexports.defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n    if (config === void 0) { config = exports.defaultThrottleConfig; }\n    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };\n}\nexports.throttle = throttle;\nvar ThrottleOperator = (function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = (function (_super) {\n    __extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasTrailingValue = false;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this._trailing) {\n                this._hasTrailingValue = true;\n                this._trailingValue = value;\n            }\n        }\n        else {\n            var duration = this.tryDurationSelector(value);\n            if (duration) {\n                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n            }\n            if (this._leading) {\n                this.destination.next(value);\n                if (this._trailing) {\n                    this._hasTrailingValue = true;\n                    this._trailingValue = value;\n                }\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    ThrottleSubscriber.prototype._unsubscribe = function () {\n        var _a = this, throttled = _a.throttled, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue, _trailing = _a._trailing;\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n    };\n    ThrottleSubscriber.prototype._sendTrailing = function () {\n        var _a = this, destination = _a.destination, throttled = _a.throttled, _trailing = _a._trailing, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue;\n        if (throttled && _trailing && _hasTrailingValue) {\n            destination.next(_trailingValue);\n            this._trailingValue = null;\n            this._hasTrailingValue = false;\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=throttle.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\nvar throttle_1 = require('./throttle');\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }\n    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };\n}\nexports.throttleTime = throttleTime;\nvar ThrottleTimeOperator = (function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = (function (_super) {\n    __extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        _super.call(this, destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\nfunction timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return function (source) { return source.lift(new TimeIntervalOperator(scheduler)); };\n}\nexports.timeInterval = timeInterval;\nvar TimeInterval = (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nexports.TimeInterval = TimeInterval;\n;\nvar TimeIntervalOperator = (function () {\n    function TimeIntervalOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimeIntervalOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n    };\n    return TimeIntervalOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeIntervalSubscriber = (function (_super) {\n    __extends(TimeIntervalSubscriber, _super);\n    function TimeIntervalSubscriber(destination, scheduler) {\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.lastTime = 0;\n        this.lastTime = scheduler.now();\n    }\n    TimeIntervalSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        var span = now - this.lastTime;\n        this.lastTime = now;\n        this.destination.next(new TimeInterval(value, span));\n    };\n    return TimeIntervalSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeInterval.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nvar TimeoutError = (function (_super) {\n    __extends(TimeoutError, _super);\n    function TimeoutError() {\n        var err = _super.call(this, 'Timeout has occurred');\n        this.name = err.name = 'TimeoutError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return TimeoutError;\n}(Error));\nexports.TimeoutError = TimeoutError;\n//# sourceMappingURL=TimeoutError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar Subscriber_1 = require('../Subscriber');\nvar TimeoutError_1 = require('../util/TimeoutError');\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return function (source) { return source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError_1.TimeoutError())); };\n}\nexports.timeout = timeout;\nvar TimeoutOperator = (function () {\n    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n    }\n    TimeoutOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));\n    };\n    return TimeoutOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutSubscriber = (function (_super) {\n    __extends(TimeoutSubscriber, _super);\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    TimeoutSubscriber.dispatchTimeout = function (subscriber) {\n        subscriber.error(subscriber.errorInstance);\n    };\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.errorInstance = null;\n    };\n    return TimeoutSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeout.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return function (source) {\n        var absoluteTimeout = isDate_1.isDate(due);\n        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nexports.timeoutWith = timeoutWith;\nvar TimeoutWithOperator = (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = (function (_super) {\n    __extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult_1.subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nexports.window = window;\nvar WindowOperator = (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        _super.call(this, destination);\n        this.window = new Subject_1.Subject();\n        destination.next(this.window);\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject_1.Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=window.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subject_1 = require('../Subject');\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nexports.windowCount = windowCount;\nvar WindowCountOperator = (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = (function (_super) {\n    __extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject_1.Subject()];\n        this.count = 0;\n        destination.next(this.windows[0]);\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject_1.Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=windowCount.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar async_1 = require('../scheduler/async');\nvar Subscriber_1 = require('../Subscriber');\nvar isNumeric_1 = require('../util/isNumeric');\nvar isScheduler_1 = require('../util/isScheduler');\nfunction windowTime(windowTimeSpan) {\n    var scheduler = async_1.async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric_1.isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric_1.isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nexports.windowTime = windowTime;\nvar WindowTimeOperator = (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = (function (_super) {\n    __extends(CountedSubject, _super);\n    function CountedSubject() {\n        _super.apply(this, arguments);\n        this._numberOfNextedValues = 0;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject_1.Subject));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = (function (_super) {\n    __extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n        this.windows = [];\n        var window = this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: this, window: window, windowTimeSpan: windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Subscription_1 = require('../Subscription');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };\n}\nexports.windowToggle = windowToggle;\nvar WindowToggleOperator = (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = (function (_super) {\n    __extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject_1.errorObject) {\n                return this.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var window_1 = new Subject_1.Subject();\n                var subscription = new Subscription_1.Subscription();\n                var context = { window: window_1, subscription: subscription };\n                this.contexts.push(context);\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nexports.windowWhen = windowWhen;\nvar WindowOperator = (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) { innerSub = null; }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject_1.Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            var err = errorObject_1.errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nexports.withLatestFrom = withLatestFrom;\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar Subscriber_1 = require('../Subscriber');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar iterator_1 = require('../symbol/iterator');\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\nexports.zip = zip;\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexports.zipStatic = zipStatic;\nvar ZipOperator = (function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = (function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) { values = Object.create(null); }\n        _super.call(this, destination);\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray_1.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator_1.iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_1.iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ZipSubscriber = ZipSubscriber;\nvar StaticIterator = (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = (function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=zip.js.map","\"use strict\";\nvar audit_1 = require('./operators/audit');\nexports.audit = audit_1.audit;\nvar auditTime_1 = require('./operators/auditTime');\nexports.auditTime = auditTime_1.auditTime;\nvar buffer_1 = require('./operators/buffer');\nexports.buffer = buffer_1.buffer;\nvar bufferCount_1 = require('./operators/bufferCount');\nexports.bufferCount = bufferCount_1.bufferCount;\nvar bufferTime_1 = require('./operators/bufferTime');\nexports.bufferTime = bufferTime_1.bufferTime;\nvar bufferToggle_1 = require('./operators/bufferToggle');\nexports.bufferToggle = bufferToggle_1.bufferToggle;\nvar bufferWhen_1 = require('./operators/bufferWhen');\nexports.bufferWhen = bufferWhen_1.bufferWhen;\nvar catchError_1 = require('./operators/catchError');\nexports.catchError = catchError_1.catchError;\nvar combineAll_1 = require('./operators/combineAll');\nexports.combineAll = combineAll_1.combineAll;\nvar combineLatest_1 = require('./operators/combineLatest');\nexports.combineLatest = combineLatest_1.combineLatest;\nvar concat_1 = require('./operators/concat');\nexports.concat = concat_1.concat;\nvar concatAll_1 = require('./operators/concatAll');\nexports.concatAll = concatAll_1.concatAll;\nvar concatMap_1 = require('./operators/concatMap');\nexports.concatMap = concatMap_1.concatMap;\nvar concatMapTo_1 = require('./operators/concatMapTo');\nexports.concatMapTo = concatMapTo_1.concatMapTo;\nvar count_1 = require('./operators/count');\nexports.count = count_1.count;\nvar debounce_1 = require('./operators/debounce');\nexports.debounce = debounce_1.debounce;\nvar debounceTime_1 = require('./operators/debounceTime');\nexports.debounceTime = debounceTime_1.debounceTime;\nvar defaultIfEmpty_1 = require('./operators/defaultIfEmpty');\nexports.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\nvar delay_1 = require('./operators/delay');\nexports.delay = delay_1.delay;\nvar delayWhen_1 = require('./operators/delayWhen');\nexports.delayWhen = delayWhen_1.delayWhen;\nvar dematerialize_1 = require('./operators/dematerialize');\nexports.dematerialize = dematerialize_1.dematerialize;\nvar distinct_1 = require('./operators/distinct');\nexports.distinct = distinct_1.distinct;\nvar distinctUntilChanged_1 = require('./operators/distinctUntilChanged');\nexports.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\nvar distinctUntilKeyChanged_1 = require('./operators/distinctUntilKeyChanged');\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\nvar elementAt_1 = require('./operators/elementAt');\nexports.elementAt = elementAt_1.elementAt;\nvar every_1 = require('./operators/every');\nexports.every = every_1.every;\nvar exhaust_1 = require('./operators/exhaust');\nexports.exhaust = exhaust_1.exhaust;\nvar exhaustMap_1 = require('./operators/exhaustMap');\nexports.exhaustMap = exhaustMap_1.exhaustMap;\nvar expand_1 = require('./operators/expand');\nexports.expand = expand_1.expand;\nvar filter_1 = require('./operators/filter');\nexports.filter = filter_1.filter;\nvar finalize_1 = require('./operators/finalize');\nexports.finalize = finalize_1.finalize;\nvar find_1 = require('./operators/find');\nexports.find = find_1.find;\nvar findIndex_1 = require('./operators/findIndex');\nexports.findIndex = findIndex_1.findIndex;\nvar first_1 = require('./operators/first');\nexports.first = first_1.first;\nvar groupBy_1 = require('./operators/groupBy');\nexports.groupBy = groupBy_1.groupBy;\nvar ignoreElements_1 = require('./operators/ignoreElements');\nexports.ignoreElements = ignoreElements_1.ignoreElements;\nvar isEmpty_1 = require('./operators/isEmpty');\nexports.isEmpty = isEmpty_1.isEmpty;\nvar last_1 = require('./operators/last');\nexports.last = last_1.last;\nvar map_1 = require('./operators/map');\nexports.map = map_1.map;\nvar mapTo_1 = require('./operators/mapTo');\nexports.mapTo = mapTo_1.mapTo;\nvar materialize_1 = require('./operators/materialize');\nexports.materialize = materialize_1.materialize;\nvar max_1 = require('./operators/max');\nexports.max = max_1.max;\nvar merge_1 = require('./operators/merge');\nexports.merge = merge_1.merge;\nvar mergeAll_1 = require('./operators/mergeAll');\nexports.mergeAll = mergeAll_1.mergeAll;\nvar mergeMap_1 = require('./operators/mergeMap');\nexports.mergeMap = mergeMap_1.mergeMap;\nvar mergeMap_2 = require('./operators/mergeMap');\nexports.flatMap = mergeMap_2.mergeMap;\nvar mergeMapTo_1 = require('./operators/mergeMapTo');\nexports.mergeMapTo = mergeMapTo_1.mergeMapTo;\nvar mergeScan_1 = require('./operators/mergeScan');\nexports.mergeScan = mergeScan_1.mergeScan;\nvar min_1 = require('./operators/min');\nexports.min = min_1.min;\nvar multicast_1 = require('./operators/multicast');\nexports.multicast = multicast_1.multicast;\nvar observeOn_1 = require('./operators/observeOn');\nexports.observeOn = observeOn_1.observeOn;\nvar onErrorResumeNext_1 = require('./operators/onErrorResumeNext');\nexports.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\nvar pairwise_1 = require('./operators/pairwise');\nexports.pairwise = pairwise_1.pairwise;\nvar partition_1 = require('./operators/partition');\nexports.partition = partition_1.partition;\nvar pluck_1 = require('./operators/pluck');\nexports.pluck = pluck_1.pluck;\nvar publish_1 = require('./operators/publish');\nexports.publish = publish_1.publish;\nvar publishBehavior_1 = require('./operators/publishBehavior');\nexports.publishBehavior = publishBehavior_1.publishBehavior;\nvar publishLast_1 = require('./operators/publishLast');\nexports.publishLast = publishLast_1.publishLast;\nvar publishReplay_1 = require('./operators/publishReplay');\nexports.publishReplay = publishReplay_1.publishReplay;\nvar race_1 = require('./operators/race');\nexports.race = race_1.race;\nvar reduce_1 = require('./operators/reduce');\nexports.reduce = reduce_1.reduce;\nvar repeat_1 = require('./operators/repeat');\nexports.repeat = repeat_1.repeat;\nvar repeatWhen_1 = require('./operators/repeatWhen');\nexports.repeatWhen = repeatWhen_1.repeatWhen;\nvar retry_1 = require('./operators/retry');\nexports.retry = retry_1.retry;\nvar retryWhen_1 = require('./operators/retryWhen');\nexports.retryWhen = retryWhen_1.retryWhen;\nvar refCount_1 = require('./operators/refCount');\nexports.refCount = refCount_1.refCount;\nvar sample_1 = require('./operators/sample');\nexports.sample = sample_1.sample;\nvar sampleTime_1 = require('./operators/sampleTime');\nexports.sampleTime = sampleTime_1.sampleTime;\nvar scan_1 = require('./operators/scan');\nexports.scan = scan_1.scan;\nvar sequenceEqual_1 = require('./operators/sequenceEqual');\nexports.sequenceEqual = sequenceEqual_1.sequenceEqual;\nvar share_1 = require('./operators/share');\nexports.share = share_1.share;\nvar shareReplay_1 = require('./operators/shareReplay');\nexports.shareReplay = shareReplay_1.shareReplay;\nvar single_1 = require('./operators/single');\nexports.single = single_1.single;\nvar skip_1 = require('./operators/skip');\nexports.skip = skip_1.skip;\nvar skipLast_1 = require('./operators/skipLast');\nexports.skipLast = skipLast_1.skipLast;\nvar skipUntil_1 = require('./operators/skipUntil');\nexports.skipUntil = skipUntil_1.skipUntil;\nvar skipWhile_1 = require('./operators/skipWhile');\nexports.skipWhile = skipWhile_1.skipWhile;\nvar startWith_1 = require('./operators/startWith');\nexports.startWith = startWith_1.startWith;\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './operators/subscribeOn';\nvar switchAll_1 = require('./operators/switchAll');\nexports.switchAll = switchAll_1.switchAll;\nvar switchMap_1 = require('./operators/switchMap');\nexports.switchMap = switchMap_1.switchMap;\nvar switchMapTo_1 = require('./operators/switchMapTo');\nexports.switchMapTo = switchMapTo_1.switchMapTo;\nvar take_1 = require('./operators/take');\nexports.take = take_1.take;\nvar takeLast_1 = require('./operators/takeLast');\nexports.takeLast = takeLast_1.takeLast;\nvar takeUntil_1 = require('./operators/takeUntil');\nexports.takeUntil = takeUntil_1.takeUntil;\nvar takeWhile_1 = require('./operators/takeWhile');\nexports.takeWhile = takeWhile_1.takeWhile;\nvar tap_1 = require('./operators/tap');\nexports.tap = tap_1.tap;\nvar throttle_1 = require('./operators/throttle');\nexports.throttle = throttle_1.throttle;\nvar throttleTime_1 = require('./operators/throttleTime');\nexports.throttleTime = throttleTime_1.throttleTime;\nvar timeInterval_1 = require('./operators/timeInterval');\nexports.timeInterval = timeInterval_1.timeInterval;\nvar timeout_1 = require('./operators/timeout');\nexports.timeout = timeout_1.timeout;\nvar timeoutWith_1 = require('./operators/timeoutWith');\nexports.timeoutWith = timeoutWith_1.timeoutWith;\nvar timestamp_1 = require('./operators/timestamp');\nexports.timestamp = timestamp_1.timestamp;\nvar toArray_1 = require('./operators/toArray');\nexports.toArray = toArray_1.toArray;\nvar window_1 = require('./operators/window');\nexports.window = window_1.window;\nvar windowCount_1 = require('./operators/windowCount');\nexports.windowCount = windowCount_1.windowCount;\nvar windowTime_1 = require('./operators/windowTime');\nexports.windowTime = windowTime_1.windowTime;\nvar windowToggle_1 = require('./operators/windowToggle');\nexports.windowToggle = windowToggle_1.windowToggle;\nvar windowWhen_1 = require('./operators/windowWhen');\nexports.windowWhen = windowWhen_1.windowWhen;\nvar withLatestFrom_1 = require('./operators/withLatestFrom');\nexports.withLatestFrom = withLatestFrom_1.withLatestFrom;\nvar zip_1 = require('./operators/zip');\nexports.zip = zip_1.zip;\nvar zipAll_1 = require('./operators/zipAll');\nexports.zipAll = zipAll_1.zipAll;\n//# sourceMappingURL=operators.js.map","import './rxjs'\nimport { RxRestConfiguration } from './RxRestConfiguration'\nimport {\n  RequestInterceptor,\n  ResponseInterceptor,\n  ErrorInterceptor,\n  ErrorResponse,\n  BodyParam\n} from './interfaces'\nimport { RxRestCollection, RxRestItem } from './index'\nimport { Observable } from 'rxjs/Observable'\nimport { Observer } from 'rxjs/Observer'\nimport { mergeMap, catchError } from 'rxjs/operators'\nimport { fromPromise } from 'rxjs/observable/fromPromise'\nimport { _throw } from 'rxjs/observable/throw'\nimport { of } from 'rxjs/observable/of'\n\nimport { objectToMap, uuid } from './utils'\n\n// const fromPromise = function(promise: Promise<any>) {\n//   return Observable.create((observer: Observer<any>) => {\n//     promise\n//     .then((v) => {\n//       observer.next(v)\n//       observer.complete()\n//     })\n//     .catch(observer.error)\n//   })\n// }\n\nexport class RxRest<F, T> {\n  protected $route: string[]\n  $fromServer: boolean = false\n  $asIterable: boolean = true\n  $queryParams: URLSearchParams = new URLSearchParams()\n  $headers: Headers = new Headers()\n  config: RxRestConfiguration\n  $metadata: any\n  $pristine: boolean = true\n  $uuid?: string;\n\n  /**\n   * constructor\n   *\n   * @param {String} [route] the resource route\n   */\n  constructor(\n    config: RxRestConfiguration = new RxRestConfiguration(),\n    route?: string[],\n    metadata?: any\n  ) {\n    this.$route = route === undefined ? [] : [...route]\n    this.config = config\n    this.$metadata = metadata\n    if (config.uuid) {\n      this.$uuid = uuid()\n    }\n  }\n\n  protected addRoute(route: string): void {\n    this.$route.push.apply(this.$route, route.split('/'))\n  }\n\n  /**\n   * one\n   *\n   * @param {String} route\n   * @param {any} id\n   * @returns {RxRestItem}\n   */\n  one<T>(route: string, id?: any): RxRestItem<T> {\n    this.addRoute(route)\n    let o = {} as T\n    if (id) {\n      o[this.config.identifier] = id\n    }\n\n    return new RxRestItem<T>(this.$route, o, this.config)\n  }\n\n  /**\n   * all\n   *\n   * @param {String} route\n   * @param {boolean} [asIterable=true] - forces the next request to return an Observable<Array>\n   *                               instead of emitting multiple events\n   * @returns {RxRestCollection}\n   */\n  all<T>(route: string, asIterable: boolean = true): RxRestCollection<T> {\n    this.addRoute(route)\n    return new RxRestCollection<T>(this.$route, undefined, this.config, null, asIterable)\n  }\n\n  /**\n   * asIterable - sets the flag $asIterable\n   * instead of emitting multiple events\n   *\n   * @returns {self}\n   */\n  asIterable(value = true): this {\n    this.$asIterable = value\n    return this\n  }\n\n  /**\n   * fromObject\n   *\n   * @param {String} route\n   * @param {Object|Object[]} element\n   * @returns {RxRestItem|RxRestCollection}\n   */\n  fromObject<T>(route: string, element: T|T[]): RxRestItem<T>|RxRestCollection<T> {\n    this.addRoute(route)\n    if (Array.isArray(element)) {\n      return new RxRestCollection<T>(this.$route, element, this.config)\n    }\n\n    return new RxRestItem<T>(this.$route, element, this.config)\n  }\n\n  /**\n   * @access private\n   * @param {BodyParam} body\n   * @return {BodyParam|RxRestItem}\n   */\n  protected withBody(body: BodyParam<T>) {\n    return body ? body : this\n  }\n\n  /**\n   * post\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  post(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Observable<F> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('POST', this.withBody(body))\n  }\n\n  /**\n   * remove\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  remove(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Observable<F> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('DELETE')\n  }\n\n  /**\n   * get\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  get(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Observable<F> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('GET')\n  }\n\n  /**\n   * put\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  put(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Observable<F> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('PUT', this.withBody(body))\n  }\n\n  /**\n   * patch\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  patch(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Observable<F> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('PATCH', this.withBody(body))\n  }\n\n  /**\n   * head\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  head(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Observable<F> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('HEAD')\n  }\n\n  /**\n   * trace\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  trace(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Observable<F> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('TRACE')\n  }\n\n  /**\n   * options\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  options(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Observable<F> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('OPTIONS')\n  }\n\n  /**\n   * URL\n   *\n   * @returns {string}\n   */\n  get URL(): string {\n    return `${this.config.baseURL}${this.$route.join('/')}`\n  }\n\n  /**\n   * set local query params\n   * @param {Object|URLSearchParams} params\n   */\n  set queryParams(params: any) {\n    if (!params) {\n      return\n    }\n\n    if (params instanceof URLSearchParams) {\n      this.$queryParams = params\n      return\n    }\n\n    this.$queryParams = objectToMap(new URLSearchParams(), params)\n  }\n\n  /**\n   * Sets local query params useful to add params to a custom request\n   * @param {Object|URLSearchParams}\n   * @return this\n   */\n  setQueryParams(params: any): this {\n    this.queryParams = params\n    return this\n  }\n\n  /**\n   * Sets local headers useful to add headers to a custom request\n   * @param {Object|URLSearchParams}\n   * @return this\n   */\n  setHeaders(params: any): this {\n    this.headers = params\n    return this\n  }\n\n  /**\n   * Get local query params\n   * @return URLSearchParams\n   */\n  get queryParams(): any {\n    return this.$queryParams\n  }\n\n  /**\n   * Get request query params\n   * Combine local and global query params\n   * Local query params are overriding global params\n   * @return {String}\n   */\n  get requestQueryParams(): string {\n    let params = new URLSearchParams()\n\n    for (let param of this.config.queryParams) {\n      params.append(param[0], param[1])\n    }\n\n    for (let param of this.queryParams) {\n      params.append(param[0], param[1])\n    }\n\n    let str = params.toString()\n\n    if (str.length) {\n      return '?' + str\n    }\n\n    return ''\n  }\n\n  /**\n   * Set local headers\n   * @param {Object|Headers} params\n   */\n  set headers(params: any) {\n    if (!params) {\n      return\n    }\n\n     if (params instanceof Headers) {\n      this.$headers = params\n      return\n    }\n\n    this.$headers = objectToMap(new Headers(), params)\n }\n\n  /**\n   * Get local headers\n   * @return Headers\n   */\n  get headers(): any {\n    return this.$headers\n  }\n\n  /**\n   * get request Headers\n   * Combine local and global headers\n   * Local headers are overriding global headers\n   *\n   * @returns {Headers}\n   */\n  get requestHeaders(): Headers {\n    let headers = new Headers()\n\n    for (let header of this.headers) {\n      headers.append(header[0], header[1])\n    }\n\n    for (let header of this.config.headers) {\n      headers.append(header[0], header[1])\n    }\n\n    return headers\n  }\n\n  /**\n   * expandInterceptors\n   *\n   * @param {RequestInterceptor[]|ResponseInterceptor[]|ErrorInterceptor[]} interceptors\n   * @returns {Observable<any>} fn\n   */\n  private expandInterceptors(\n    interceptors: RequestInterceptor[]|ResponseInterceptor[]|ErrorInterceptor[]\n  ) {\n    return function(origin: any): Observable<any> {\n      return (<any>interceptors).reduce(\n        (obs: Observable<any>, interceptor: any) =>\n          obs.concatMap(value => {\n            let result = interceptor(value)\n            if (result === undefined) {\n              return of(value)\n            }\n\n            if (result instanceof Promise) {\n              return fromPromise(result)\n            }\n\n            if (result instanceof Observable) {\n              return result\n            }\n\n            return of(result)\n          }),\n        of(origin)\n      )\n    }\n  }\n\n  /**\n   * request\n   *\n   * @param {string} method\n   * @param {RxRestItem|FormData|URLSearchParams|Body|Blob|undefined|Object} [body]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  request(method: string, body?: BodyParam<T>): Observable<F> {\n    let requestOptions = {\n      method: method,\n      headers: <Headers> this.requestHeaders,\n      body: this.config.requestBodyHandler(body) as any\n    }\n\n    let request = new Request(this.URL + this.requestQueryParams, requestOptions)\n    let stream = <Observable<F>> Observable.of(request)\n    .pipe(\n      mergeMap(this.expandInterceptors(this.config.requestInterceptors)),\n      mergeMap(request => this.config.fetch(request, null, this.config.abortCallback)),\n      mergeMap(this.expandInterceptors(this.config.responseInterceptors)),\n      mergeMap(body => fromPromise(this.config.responseBodyHandler(body))),\n      mergeMap(({body, metadata}) => {\n        if (!Array.isArray(body)) {\n          let item: RxRestItem<T>\n          if (this instanceof RxRestItem) {\n            item = this\n            item.element = body as T\n            item.$metadata = metadata\n          } else {\n            item = new RxRestItem<T>(this.$route, body, this.config, metadata)\n          }\n\n          item.$fromServer = true\n          item.$pristine = true\n\n          return Observable.create((observer: Observer<RxRestItem<T>>) => {\n            observer.next(item)\n            observer.complete()\n          })\n        }\n\n        let collection = new RxRestCollection<T>(this.$route, body.map((e: T) => {\n          let item = new RxRestItem<T>(this.$route, e, this.config, metadata)\n          item.$fromServer = true\n          item.$pristine = true\n          return item\n        }), this.config, metadata)\n\n        collection.$pristine = true\n\n        return Observable.create((observer: Observer<RxRestItem<T>|RxRestCollection<T>>) => {\n          if (this.$asIterable) {\n            observer.next(collection)\n          } else {\n            for (let item of collection) {\n              observer.next(item)\n            }\n          }\n\n          observer.complete()\n        })\n      }),\n      catchError(body => {\n        return of(body).pipe(\n          mergeMap(this.expandInterceptors(this.config.errorInterceptors)),\n          mergeMap((body: ErrorResponse) => _throw(body))\n        )\n      })\n    )\n\n    return stream\n  }\n}\n","import { Observable } from 'rxjs/Observable'\nimport { RxRestProxyHandler } from './RxRestProxyHandler'\nimport { RxRest as AbstractRxRest } from './RxRest'\nimport { RxRestConfiguration } from './RxRestConfiguration';\n\nexport class RxRestItem<T> extends AbstractRxRest<RxRestItem<T> & T, T> {\n  $element: T = {} as T;\n\n  /**\n   * constructor\n   *\n   * @param {string[]} route\n   * @param {T} [element]\n   * @return {Proxy}\n   */\n  constructor(route: string[], element?: T, config?: RxRestConfiguration, metadata?: any) {\n    super(config, route, metadata)\n\n    if (element !== undefined) {\n      this.element = element\n    }\n\n    const proxy = new Proxy(this.$element, new RxRestProxyHandler<RxRestItem<T>, T>(this))\n\n    return <RxRestItem<T> & T> proxy\n  }\n\n  /**\n   * save - POST or PUT according to $fromServer value\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  save(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Observable<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request(this.$fromServer === true ? 'PUT' : 'POST', this)\n  }\n\n  /**\n   * set element\n   *\n   * @param {T} element\n   */\n  set element(element: T) {\n    for (let i in element) {\n      if (i === this.config.identifier && !this.$element[this.config.identifier]) {\n        this.$route.push('' + element[i])\n      }\n\n      this.$element[i] = element[i]\n    }\n  }\n\n  /**\n   * get element\n   *\n   * @return {T}\n   */\n  get element(): T {\n    return this.$element\n  }\n\n  /**\n   * get plain object\n   *\n   * @return {T}\n   */\n  plain(): T {\n    return this.element\n  }\n\n  /**\n   * Get json string\n   * @return {string}\n   */\n  json(): string {\n    return JSON.stringify(this.plain())\n  }\n\n  /**\n   * Clone\n   * @return {RxRestItem<T>}\n   */\n  clone(): RxRestItem<T> & T {\n    let route = this.$route\n\n    if (this.$element[this.config.identifier]) {\n      route = route.slice(0, this.$route.length - 1)\n    }\n\n    let clone = new RxRestItem(route, this.$element, this.config)\n    clone.$fromServer = this.$fromServer\n    return clone as RxRestItem<T> & T\n  }\n}\n\nexport class RxRestCollection<T> extends AbstractRxRest<RxRestCollection<T> & T[] & T, T>\n  implements Iterable<RxRestItem<T>> {\n  length: number;\n  $elements: RxRestItem<T>[] = [];\n  [index: number]: RxRestItem<T>;\n\n  /**\n   * constructor\n   *\n   * @param {string[]} route\n   * @param {T[]|RxRestItem<T>[]]} [elements]\n   * @return {Proxy}\n   */\n  constructor(\n    route: string[],\n    elements?: T[]|RxRestItem<T>[],\n    config?: RxRestConfiguration,\n    metadata?: any,\n    asIterable: boolean = true\n  ) {\n    super(config, route, metadata)\n\n    if (elements !== undefined) {\n      this.elements = (elements as any).map((e: any) =>\n        e instanceof RxRestItem ? e.clone() : new RxRestItem(this.$route, e)\n      )\n    }\n\n    this.$asIterable = asIterable\n\n    const proxy = new Proxy(this.$elements, new RxRestProxyHandler<RxRestCollection<T>, T>(this))\n\n    return <RxRestCollection<T> & T[]> proxy\n  }\n\n  [Symbol.iterator]() {\n    let index = 0\n    let elements = this.$elements\n\n    return {\n      next(): IteratorResult<RxRestItem<T>> {\n        return index < elements.length ?\n          {value: elements[index++], done: false} : {value: undefined, done: true}\n      }\n    }\n  }\n\n  /**\n   * getList - fetch a collection\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Observable<RxRestItem|RxRestCollection>}\n   */\n  getList(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Observable<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('GET')\n  }\n\n  /**\n   * set elements\n   *\n   * @param {T[]} elements\n   */\n  set elements(elements: RxRestItem<T>[]) {\n    this.$elements = elements\n    this.length = elements.length\n  }\n\n  /**\n   * get elements\n   * @return {RxRestItem<T>[]}\n   */\n  get elements(): RxRestItem<T>[] {\n    return this.$elements\n  }\n\n  /**\n   * plain\n   *\n   * @returns {T[]}\n   */\n  plain(): T[] {\n    return this.elements.map(e => e.plain())\n  }\n\n  /**\n   * json\n   *\n   * @returns {String}\n   */\n  json(): string {\n    return JSON.stringify(this.plain())\n  }\n\n  /**\n   * clone\n   *\n   * @returns {RxRestCollection}\n   */\n  clone(): RxRestCollection<T> & T[] {\n    return new RxRestCollection<T>(\n      this.$route, this.$elements, this.config\n    ) as RxRestCollection<T> & T[]\n  }\n}\n\nexport class RxRest {\n  constructor(private config: RxRestConfiguration) {\n  }\n\n  one<T>(route: string, id?: any): RxRestItem<T> & T {\n    let r = new AbstractRxRest(this.config)\n    return r.one.call(r, route, id)\n  }\n\n  all<T>(route: string, asIterable: boolean = true): RxRestCollection<T> & T[] {\n    let r = new AbstractRxRest(this.config)\n    return r.all.call(r, route, asIterable)\n  }\n\n  fromObject<T>(route: string, element: T|T[]): (RxRestItem<T> & T) | (RxRestCollection<T> & T[]) {\n    let r = new AbstractRxRest(this.config)\n    return r.fromObject.call(r, route, element)\n  }\n}\n\nexport { RxRestConfiguration }\n"],"names":["target","$instance","$internal","this","concat","Object","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","p","attributes","indexOf","defineProperty","value","receiver","$pristine","__window","window","__self","self","WorkerGlobalScope","__global","global","_root","Error","isFunction","x","Array","isArray","length","isObject","tryCatchTarget","e","tryCatcher","apply","arguments","errorObject_1","errorObject","tryCatch","fn","__extends","d","b","hasOwnProperty","__","constructor","prototype","create","UnsubscriptionError","_super","errors","call","err","map","i","toString","join","name","stack","message","Subscription","unsubscribe","closed","_parent","_parents","_subscriptions","_unsubscribe","empty","hasErrors","index","len","remove","isFunction_1","tryCatch_1","UnsubscriptionError_1","flattenUnsubscriptionErrors","isArray_1","sub","isObject_1","push","add","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","splice","parent","reduce","errs","next","error","complete","Symbol","root_1","root","exports","for","rxSubscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","Observer_1","SafeSubscriber","rxSubscriber_1","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscription_1","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","_this","wrappedComplete","toSubscriber","nextOrObserver","Subscriber_1","getSymbolObservable","$$observable","observable","noop","pipe","fns","_i","pipeFromArray","input","prev","noop_1","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","toSubscriber_1","_trySubscribe","forEach","PromiseCtor","Rx","config","Promise","resolve","reject","observable_1","operations","pipe_1","toPromise","PromiseObservable","promise","scheduler","then","setTimeout","schedule","dispatchNext","dispatchError","Observable_1","arg","PromiseObservable_1","fromPromise","fromPromise_1","isPromise","symbolIteratorPonyfill","iterator","Set_1","Set","Map_1","Map","keys","key","InnerSubscriber","outerValue","outerIndex","notifyNext","notifyError","notifyComplete","subscribeToResult","outerSubscriber","result","InnerSubscriber_1","isArrayLike_1","isArrayLike","isPromise_1","iterator_1","item","done","obs","TypeError","msg","OuterSubscriber","innerValue","innerIndex","innerSub","mergeMap","project","resultSelector","concurrent","Number","POSITIVE_INFINITY","MergeMapOperator","observer","MergeMapSubscriber","hasCompleted","buffer","active","_tryNext","_innerSub","ish","subscribeToResult_1","_notifyResultSelector","shift","OuterSubscriber_1","mergeMap_1","flatMap","ErrorObservable","dispatch","ErrorObservable_1","concatMap","throw","throw_1","_throw","concatMap_1","catchError","selector","CatchOperator","caught","CatchSubscriber","err2","_catch","catchError_1","catch","catch_1","ScalarObservable","state","EmptyObservable","isScheduler","ArrayObservable","array","of","isScheduler_1","pop","ScalarObservable_1","EmptyObservable_1","count","ArrayObservable_1","append","a","Math","random","of_1","Emitter","obj","mixin","module","on","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","slice","listeners","hasListeners","RequestBase","clearTimeout","_timer","_responseTimeoutTimer","parse","_parser","responseType","val","_responseType","serialize","_serializer","timeout","options","_timeout","_responseTimeout","option","deadline","response","console","warn","retry","_maxRetries","_retries","_retryCallback","ERROR_CODES","_shouldRetry","res","override","status","code","crossDomain","_retry","req","request","_aborted","timedout","_end","_fullfilledPromise","_endCalled","innerResolve","innerReject","end","undefined","use","ok","_okCallback","_isResponseOK","get","field","_header","toLowerCase","getHeader","set","header","unset","_data","_getFormData","abort","xhr","_auth","user","pass","base64Encoder","type","username","password","withCredentials","_withCredentials","redirects","n","_maxRedirects","maxResponseSize","_maxResponseSize","toJSON","method","url","data","headers","send","isObj","_formData","_isHost","sortQuery","sort","_sort","_finalizeQueryString","query","_query","queryArr","substring","split","_appendQueryString","trace","_timeoutError","reason","errno","callback","_setTimeouts","str","parts","changesOrigin","ResponseBase","Agent","_defaults","_setHeaderProperties","ct","utils","params","links","link","parseLinks","_setStatusProperties","statusCode","statusType","info","redirect","clientError","serverError","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","_setDefaults","def","Request","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","trim","s","replace","pairs","pushEncodedKeyValuePair","v","subkey","encodeURIComponent","parseString","pair","pos","decodeURIComponent","isJSON","mime","test","Response","text","responseText","statusText","line","lines","fields","parseHeader","getAllResponseHeaders","getResponseHeader","body","_parseBody","new_err","original","rawResponse","custom_err","del","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","accept","auth","btoa","string","attach","file","FormData","_callback","retries","crossDomainError","ca","agent","write","onreadystatechange","readyState","handleProgress","direction","total","percent","loaded","onprogress","upload","open","contentType","setRequestHeader","head","patch","post","put","init","abortCallback","superagent","Headers","URLSearchParams","fetch","RxRestItem","metadata","_responseBodyHandler","responseBodyHandler","_requestBodyHandler","requestBodyHandler","base","charAt","$baseURL","$queryParams","objectToMap","$headers","AuditSubscriber","durationSelector","hasValue","throttled","duration","innerSubscription","clearThrottle","Action","work","delay","AsyncAction","pending","id","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action_1","Scheduler","SchedulerAction","now","Date","AsyncScheduler","scheduled","action","Scheduler_1","AsyncScheduler_1","AsyncAction_1","isNumeric","parseFloat","isDate","isNaN","TimerObservable","dueTime","period","isNumeric_1","async_1","async","isDate_1","initialDelay","BufferSubscriber","closingNotifier","BufferCountSubscriber","bufferSize","BufferSkipCountSubscriber","startBufferEvery","buffers","Context","BufferTimeSubscriber","bufferTimeSpan","bufferCreationInterval","maxBufferSize","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","prevContext","BufferToggleSubscriber","openings","closingSelector","closeBuffer","openBuffer","trySubscribe","BufferWhenSubscriber","subscribing","closingSubscription","none","CombineLatestSubscriber","values","observables","toRespond","unused","oldVal","_tryProject","IteratorObservable","getIterator","hasError","return","StringIterator","idx","ArrayIterator","arr","toLength","maxSafeInteger","pow","o","numberIsFinite","sign","floor","abs","isFinite","valueAsNumber","ArrayLikeObservable","arrayLike","Notification","kind","observe","do","toObservable","createNext","undefinedValueNotification","createError","createComplete","completeNotification","observeOn","ObserveOnOperator","ObserveOnSubscriber","notification","scheduleMessage","ObserveOnMessage","Notification_1","FromObservable","IteratorObservable_1","ArrayLikeObservable_1","observeOn_1","CountSubscriber","predicate","_tryPredicate","DebounceSubscriber","durationSubscription","emitValue","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","DefaultIfEmptySubscriber","defaultValue","isEmpty","DelaySubscriber","queue","time","delay_1","max","_schedule","scheduleNotification","DelayMessage","DelayWhenSubscriber","delayDurationSelector","completed","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelayObservable","subscriptionDelay","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","DeMaterializeSubscriber","minimalSetImpl","MinimalSet","_values","has","enumerable","configurable","clear","DistinctSubscriber","keySelector","flushes","_useKeySelector","_finalizeNext","DistinctUntilChangedSubscriber","compare","hasKey","y","Boolean","ArgumentOutOfRangeError","ElementAtSubscriber","ArgumentOutOfRangeError_1","EverySubscriber","thisArg","everyValueMatch","SwitchFirstSubscriber","hasSubscription","SwitchFirstMapSubscriber","tryNext","trySelectResult","ExpandSubscriber","subscribeToProjection","FilterSubscriber","FinallySubscriber","FindValueSubscriber","yieldIndex","EmptyError","FirstSubscriber","_emitted","_emit","_tryResultSelector","_emitFinal","EmptyError_1","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","thrownError","AnonymousSubject","ObjectUnsubscribedError_1","copy","SubjectSubscription_1","asObservable","MapPolyfill","size","_keys","delete","MapPolyfill_1","FastMap","GroupBySubscriber","elementSelector","subjectSelector","groups","attemptedToUnsubscribe","_group","FastMap_1","element","group","Subject_1","groupedObservable","GroupedObservable","GroupDurationSubscriber","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","IgnoreElementsSubscriber","IsEmptySubscriber","LastSubscriber","MapSubscriber","MapToSubscriber","MaterializeSubscriber","ScanSubscriber","accumulator","_seed","hasSeed","seed","TakeLastSubscriber","ring","MergeMapToSubscriber","MergeScanSubscriber","acc","refCount","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableSubscriber","refCount_1","OnErrorResumeNextSubscriber","nextSources","subscribeToNextSource","PairwiseSubscriber","hasPrev","BehaviorSubject","_value","getValue","AsyncSubject","hasNext","QueueAction","QueueScheduler","QueueScheduler_1","QueueAction_1","ReplaySubject","windowTime","_events","_bufferSize","_windowTime","_getNow","ReplayEvent","_trimBufferThenGetEvents","queue_1","eventsCount","spliceCount","RaceSubscriber","hasFirst","RepeatSubscriber","RepeatWhenSubscriber","notifier","sourceIsBeingSubscribedTo","retriesSubscription","subscribeToRetries","notifications","RetrySubscriber","RetryWhenSubscriber","SampleSubscriber","SampleTimeSubscriber","dispatchNotification","SequenceEqualSubscriber","compareTo","comparor","_a","_b","_oneComplete","SequenceEqualCompareToSubscriber","checkValues","areEqual","nextB","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipSubscriber","SkipLastSubscriber","_skipCount","_count","_ring","skipCount","currentIndex","oldValue","SkipUntilSubscriber","isInnerStopped","SkipWhileSubscriber","skipping","tryCallPredicate","SwitchMapSubscriber","_tryNotifyNext","SwitchMapToSubscriber","inner","tryResultSelector","TakeSubscriber","TakeUntilSubscriber","TakeWhileSubscriber","nextOrComplete","predicateResult","DoSubscriber","safeSubscriber","leading","trailing","defaultThrottleConfig","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasTrailingValue","_trailingValue","tryDurationSelector","_sendTrailing","ThrottleTimeSubscriber","TimeInterval","interval","TimeIntervalSubscriber","lastTime","span","TimeoutError","TimeoutSubscriber","absoluteTimeout","waitFor","errorInstance","scheduleTimeout","dispatchTimeout","TimeoutWithSubscriber","withObservable","WindowSubscriber","openWindow","prevWindow","newWindow","WindowCountSubscriber","windowSize","startWindowEvery","windows","c","window_1","CountedSubject","_numberOfNextedValues","WindowTimeSubscriber","windowTimeSpan","windowCreationInterval","maxWindowSize","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","window_2","timeSpanState","WindowToggleSubscriber","openSubscription","unsubscribeClosingNotification","closingNotification","WithLatestFromSubscriber","found","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","nextResult","isComplete","throttle_1","throttle","RxRestConfiguration","route","$route","$metadata","uuid","$uuid","addRoute","identifier","asIterable","RxRestCollection","$asIterable","queryParams","withBody","interceptors","origin","interceptor","requestOptions","requestHeaders","URL","requestQueryParams","expandInterceptors","requestInterceptors","responseInterceptors","$fromServer","collection","errorInterceptors","baseURL","param","proxy","Proxy","$element","RxRestProxyHandler","AbstractRxRest","plain","clone","elements","_this2","$elements","r","one","all","fromObject"],"mappings":"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"}